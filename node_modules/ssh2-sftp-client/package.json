{
  "_args": [
    [
      {
        "raw": "ssh2-sftp-client",
        "scope": null,
        "escapedName": "ssh2-sftp-client",
        "name": "ssh2-sftp-client",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/rocky/xsite-sftp-upload"
    ]
  ],
  "_from": "ssh2-sftp-client@latest",
  "_id": "ssh2-sftp-client@2.1.0",
  "_inCache": true,
  "_location": "/ssh2-sftp-client",
  "_nodeVersion": "4.8.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ssh2-sftp-client_2.1.0_1520909076444_0.4328257681193459"
  },
  "_npmUser": {
    "name": "jyu213",
    "email": "jyu213@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ssh2-sftp-client",
    "scope": null,
    "escapedName": "ssh2-sftp-client",
    "name": "ssh2-sftp-client",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ssh2-sftp-client/-/ssh2-sftp-client-2.1.0.tgz",
  "_shasum": "17ba3e301e4728980a24f826a3ac8e4bb653c522",
  "_shrinkwrap": null,
  "_spec": "ssh2-sftp-client",
  "_where": "/home/rocky/xsite-sftp-upload",
  "author": {
    "name": "见见"
  },
  "bugs": {
    "url": "https://github.com/jyu213/ssh2-sftp-client/issues"
  },
  "dependencies": {
    "ssh2": "^0.5.5"
  },
  "description": "ssh2 sftp client for node",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-subset": "^1.2.1",
    "mocha": "2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "17ba3e301e4728980a24f826a3ac8e4bb653c522",
    "tarball": "https://registry.npmjs.org/ssh2-sftp-client/-/ssh2-sftp-client-2.1.0.tgz",
    "fileCount": 9,
    "unpackedSize": 25168
  },
  "email": "jyu213@gmail.com",
  "gitHead": "66bd384e50b31d730053daa0c81f69ca554aa811",
  "homepage": "https://github.com/jyu213/ssh2-sftp-client#readme",
  "keywords": [
    "sftp",
    "nodejs"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "jyu213",
      "email": "jyu213@gmail.com"
    }
  ],
  "name": "ssh2-sftp-client",
  "optionalDependencies": {},
  "readme": "## SSH2 SFTP Client\na SFTP client for node.js, a wrapper for [ssh2](https://github.com/mscdex/ssh2)\n\n### Installation\n`npm install ssh2-sftp-client`\n\n### Usage\n```\nlet Client = require('ssh2-sftp-client');\nlet sftp = new Client();\nsftp.connect({\n    host: '127.0.0.1',\n    port: '8080',\n    username: 'username',\n    password: '******'\n}).then(() => {\n    return sftp.list('/pathname');\n}).then((data) => {\n    console.log(data, 'the data info');\n}).catch((err) => {\n    console.log(err, 'catch error');\n});\n```\n\n### Documentation\nthe connection to server config pls see [ssh2 client event](https://github.com/mscdex/ssh2#user-content-client-methods).\n\nlist of methods:\nall the methods will return a Promise;\n#### List\nRetrieves a directory listing.\n\n```\nsftp.list(remoteFilePath)\n```\n\ndirectory info:\n\n```\ntype: // file type(-, d, l)\nname: // file name\nsize: // file size\nmodifyTime: // file timestamp of modified time\naccessTime: // file timestamp of access time\nrights: {\n    user:\n    group:\n    other:\n},\nowner: // user ID\ngroup: // group ID\n```\n\n#### Get\nget a new readable stream for path. The encoding is passed to Node Stream (https://nodejs.org/api/stream.html) and it controls how the content is encoded. For example, when downloading binary data, 'null' should be passed (check node stream documentation). Defaults to 'utf8'.\n\n```\nsftp.get(remoteFilePath, [useCompression], [encoding], [addtionalOptions]);\n```\n\n#### Put\nupload a file. it can be `localPath` or `Buffer` or `Stream`.\n\n```\nsftp.put(localFilePath, remoteFilePath, [useCompression], [encoding], [addtionalOptions]);\nsftp.put(Buffer, remoteFilePath, [useCompression], [encoding], [addtionalOptions]);\nsftp.put(Stream, remoteFilePath, [useCompression], [encoding], [addtionalOptions]);\n```\n\n#### Mkdir\ncreate a new directory.\n\n```\n// recursive default is false, if true, it will create directory recursive\nsftp.mkdir(remoteFilePath, recursive);\n```\n\n#### Rmdir\nremove the directory or file.\n\n```\n// recursive default is false, if true, it will remove directory recursive even if is not empty\nsftp.rmdir(localPath, recursive);\n```\n\n#### Delete\ndelete file.\n\n```\nsftp.delete(remoteFilePath);\n```\n\n#### Rename\nrename remoteSourcePath to remoteDestPath (removes remoteSourcePath).\n\n```\nsftp.rename(remoteSourcePath, remoteDestPath);\n```\n\n#### Chmod\nmodify rights to remoteDestPath file\n\n```\nsftp.chmod(remoteDestPath, mode);\n```\n\n#### Connect\nconnection config you will see [here](https://github.com/mscdex/ssh2#user-content-client-methods)\n\n### FAQ\n\n### Log\n#### V1.1.0\n    - fix: add encoding control support for binary stream\n\n#### V1.0.5:\n\n    - fix: multi image upload\n    - change: remove `this.client.sftp` to `connect` function\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jyu213/ssh2-sftp-client.git"
  },
  "scripts": {
    "test": "mocha test/index.js"
  },
  "version": "2.1.0"
}
